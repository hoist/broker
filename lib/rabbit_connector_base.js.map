{"version":3,"sources":["rabbit_connector_base.js"],"names":[],"mappings":"AAAA;;;;;;;;;AACA;;;;AACA;;;;;;;;;;;IAQa;;;;;;;AAMX,WANW,mBAMX,GAAc;0BANH,qBAMG;;AACZ,SAAK,OAAL,GAAe,iBAAO,KAAP,CAAa;AAC1B,WAAK,KAAK,WAAL,CAAiB,IAAjB;KADQ,CAAf,CADY;GAAd;;;;;;;;;eANW;;mCAiBI;;;AACb,WAAK,OAAL,CAAa,KAAb,CAAmB,sBAAnB,EADa;AAEb,aAAO,sCAAkB,cAAlB,GACJ,IADI,CACC,UAAC,UAAD,EAAgB;AACpB,cAAK,OAAL,CAAa,IAAb,CAAkB,oCAAlB,EADoB;AAEpB,eAAO,WAAW,aAAX,EAAP,CAFoB;OAAhB,CADD,CAIF,IAJE,CAIG,UAAC,OAAD,EAAa;AACnB,cAAK,OAAL,CAAa,KAAb,CAAmB,cAAnB,EADmB;AAEnB,cAAK,OAAL,CAAa,IAAb,CAAkB,mBAAlB,EAFmB;AAGnB,eAAO,OAAP,CAHmB;OAAb,CAJV,CAFa;;;;SAjBJ;;;kBAgCL","file":"rabbit_connector_base.js","sourcesContent":["'use strict';\nimport logger from '@hoist/logger';\nimport {\n  connectionManager\n}\nfrom './connection_manager';\n/**\n * Base class for managing publising events to rabbit mq\n * manages connection lifecycle etc\n */\nexport class RabbitConnectorBase {\n\n  /**\n   * instantiate a new instance\n   * @abstract\n   */\n  constructor() {\n    this._logger = logger.child({\n      cls: this.constructor.name\n    });\n  }\n\n  /**\n   * open up a new channel to rabbit or reuse an existing one\n   * @protected\n   * @returns {Promise}\n   */\n  _openChannel() {\n    this._logger.debug('creating new channel');\n    return connectionManager._getConnection()\n      .then((connection) => {\n        this._logger.info('got a connection, creating channel');\n        return connection.createChannel();\n      }).then((channel) => {\n        this._logger.debug('channel open');\n        this._logger.info('returning channel');\n        return channel;\n      });\n  }\n}\n\nexport\ndefault RabbitConnectorBase;\n"],"sourceRoot":"/source/"}