{"version":3,"sources":["connection_manager.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;sBACM,QAAQ;;;;uBACV,SAAS;;;;2BACP,eAAe;;;;IAC5B,iBAAiB;AACV,WADP,iBAAiB,GACP;0BADV,iBAAiB;;AAEnB,QAAI,CAAC,OAAO,GAAG,yBAAO,KAAK,CAAC;AAC1B,SAAG,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;KAC3B,CAAC,CAAC;GACJ;;eALG,iBAAiB;;WAMP,0BAAG;;;AACf,UAAI,IAAI,CAAC,WAAW,EAAE;AACpB,eAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;OAC1C,MAAM;AACL,eAAO,OAAO,CAAC,OAAO,CAAC,qBAAK,OAAO,CAAC,oBAAO,GAAG,CAAC,kBAAkB,CAAC,EAAE;AAClE,mBAAS,EAAE,oBAAO,GAAG,CAAC,2BAA2B,CAAC;SACnD,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU,EAAK;AACvB,gBAAK,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACtC,gBAAK,WAAW,GAAG,UAAU,CAAC;AAC9B,oBAAU,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;AAC3B,kBAAK,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AACxC,mBAAO,MAAK,WAAW,CAAC;WACzB,CAAC,CAAC;AACH,oBAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAG,EAAK;AAC9B,kBAAK,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC;WACnD,CAAC,CAAC;AACH,iBAAO,MAAK,WAAW,CAAC;SACzB,CAAC,CAAC;OACJ;KACF;;;WACe,4BAAG;AACjB,UAAI,IAAI,CAAC,WAAW,EAAE;AACpB,eAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;OACjC;KACF;;;SA9BG,iBAAiB;;;qBAiCR,IAAI,iBAAiB,EAAE","file":"connection_manager.js","sourcesContent":["'use strict';\nimport config from 'config';\nimport amqp from 'amqplib';\nimport logger from '@hoist/logger';\nclass ConnectionManager {\n  constructor() {\n    this._logger = logger.child({\n      cls: this.constructor.name\n    });\n  }\n  _getConnection() {\n    if (this._connection) {\n      return Promise.resolve(this._connection);\n    } else {\n      return Promise.resolve(amqp.connect(config.get('Hoist.rabbit.url'), {\n        heartbeat: config.get('Hoist.publisher.heartbeat')\n      })).then((connection) => {\n        this._logger.debug('connection open');\n        this._connection = connection;\n        connection.on('close', () => {\n          this._logger.error('connection closed');\n          delete this._connection;\n        });\n        connection.on('error', (err) => {\n          this._logger.error(err, 'connection threw error');\n        });\n        return this._connection;\n      });\n    }\n  }\n  _closeConnection() {\n    if (this._connection) {\n      return this._connection.close();\n    }\n  }\n}\n\nexport default new ConnectionManager();\n"],"sourceRoot":"/source/"}