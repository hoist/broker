{"version":3,"sources":["connection_manager.js"],"names":[],"mappings":"AAAA;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IACa;AACX,WADW,iBACX,GAAc;0BADH,mBACG;;AACZ,SAAK,OAAL,GAAe,iBAAO,KAAP,CAAa;AAC1B,WAAK,KAAK,WAAL,CAAiB,IAAjB;KADQ,CAAf,CADY;GAAd;;eADW;;qCAMM;;;AACf,UAAI,KAAK,WAAL,EAAkB;AACpB,eAAO,QAAQ,OAAR,CAAgB,KAAK,WAAL,CAAvB,CADoB;OAAtB,MAEO;AACL,eAAO,QAAQ,OAAR,CAAgB,kBAAK,OAAL,CAAa,iBAAO,GAAP,CAAW,kBAAX,CAAb,EAA6C;AAClE,qBAAW,iBAAO,GAAP,CAAW,2BAAX,CAAX;SADqB,CAAhB,EAEH,IAFG,CAEE,UAAC,UAAD,EAAgB;AACvB,gBAAK,OAAL,CAAa,KAAb,CAAmB,iBAAnB,EADuB;AAEvB,gBAAK,WAAL,GAAmB,UAAnB,CAFuB;AAGvB,qBAAW,EAAX,CAAc,OAAd,EAAuB,YAAM;AAC3B,kBAAK,OAAL,CAAa,KAAb,CAAmB,mBAAnB,EAD2B;AAE3B,mBAAO,MAAK,WAAL,CAFoB;WAAN,CAAvB,CAHuB;AAOvB,qBAAW,EAAX,CAAc,OAAd,EAAuB,UAAC,GAAD,EAAS;AAC9B,kBAAK,OAAL,CAAa,KAAb,CAAmB,GAAnB,EAAwB,wBAAxB,EAD8B;WAAT,CAAvB,CAPuB;AAUvB,iBAAO,MAAK,WAAL,CAVgB;SAAhB,CAFT,CADK;OAFP;;;;uCAmBiB;AACjB,UAAI,KAAK,WAAL,EAAkB;AACpB,eAAO,KAAK,WAAL,CAAiB,KAAjB,EAAP,CADoB;OAAtB;;;;SA3BS;;;AAiCN,IAAM,gDAAoB,IAAI,iBAAJ,EAApB","file":"connection_manager.js","sourcesContent":["'use strict';\nimport config from 'config';\nimport amqp from 'amqplib';\nimport logger from '@hoist/logger';\nexport class ConnectionManager {\n  constructor() {\n    this._logger = logger.child({\n      cls: this.constructor.name\n    });\n  }\n  _getConnection() {\n    if (this._connection) {\n      return Promise.resolve(this._connection);\n    } else {\n      return Promise.resolve(amqp.connect(config.get('Hoist.rabbit.url'), {\n        heartbeat: config.get('Hoist.publisher.heartbeat')\n      })).then((connection) => {\n        this._logger.debug('connection open');\n        this._connection = connection;\n        connection.on('close', () => {\n          this._logger.error('connection closed');\n          delete this._connection;\n        });\n        connection.on('error', (err) => {\n          this._logger.error(err, 'connection threw error');\n        });\n        return this._connection;\n      });\n    }\n  }\n  _closeConnection() {\n    if (this._connection) {\n      return this._connection.close();\n    }\n  }\n}\n\nexport const connectionManager = new ConnectionManager();\n"],"sourceRoot":"/source/"}